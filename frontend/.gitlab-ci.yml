stages:
  - build
  - test
  - notify

build-frontend-code-job:
  stage: build  
  only:
    changes:
    - frontend/*
  script:
    - cd frontend
    - npm install
    - npm run build
    - echo "PREV_JOB_ID=${CI_JOB_ID}" > build.env
  artifacts:
    reports:
      dotenv: frontend/build.env
    paths:
      - frontend/dist/frontend
    expire_in: 1 day

sonarqube-frontend-sast:
  stage: test
  only:
    changes:
    - frontend/*  
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0" 
    SONAR_PROJECT_NAME: "24_ГЛЕБФЕДОТОВ_ФРОНТЭНД"
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - cd frontend
    - > 
        sonar-scanner
        -Dsonar.sources=.
        -Dsonar.projectName=$SONAR_PROJECT_NAME
        -Dsonar.host.url=$SONARQUBE_URL
        -Dsonar.login=$SONAR_LOGIN_FRONTEND
        -Dsonar.projectKey=$SONAR_PROJECT_KEY_FRONT
        -Dsonar.qualitygate.wait=true
  needs:
    - build-frontend-code-job



telegram-notification-frontend:
  variables:
      TEXT: "Глеб Федотов собрал frontend ${CI_PROJECT_URL}/-/jobs/${PREV_JOB_ID}/artifacts/download"
      TLGRM: "https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage"
  stage: notify
  only:
    changes:
    - frontend/*
    variables:
    - $CI_COMMIT_MESSAGE =~ /send notification/
  script:
    - ls frontend/dist/frontend/*
    - 'curl -X POST -H "Content-type: application/json" --data "{\"chat_id\": \"-1002134018008\", \"text\": \"${TEXT}\"}" ${TLGRM}'
  needs:
    - build-frontend-code-job

